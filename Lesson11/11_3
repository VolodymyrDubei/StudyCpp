#include <iostream>

using namespace std;

enum class BREED
{
	GOLDEN,
	CAIRN,
	DANDIE,
	SHETLAND,
	DOBERMAN,
	LAB
};

class Mammal
{
public:
	Mammal();
	~Mammal();

	int GetAge() const { return itsAge; }
	void SetAge(int age) { itsAge = age; }

	int GetWeight() const { return itsWeight; }
	void SetWeight(int weight) { itsWeight = weight; }

	void Speak() const { cout << "Mammal sound!\n"; }
	void Sleep() const { cout << "shhh. I`m sleeping.\n"; }

protected:
	int itsAge;
	int itsWeight;
};

class Dog : public Mammal
{
public:
	Dog();
	~Dog();

	BREED GetBreed() const { return itsBreed; }
	void SetBreed(BREED breed) { itsBreed = breed; }

	void WagTail() { cout << "Tail wagging...\n"; }
	void BegForFood() { cout << "Begging for food.\n"; }

protected:
	BREED itsBreed;
};

Mammal::Mammal() :
itsAge(1), itsWeight(5)
{
	cout << "Mammal constructor...\n";
}

Mammal::~Mammal()
{
	cout << "Mammal destructor...\n";
}


Dog::Dog() :
itsBreed(BREED::GOLDEN)
{
	cout << "Dog constructor...\n";
}

Dog::~Dog()
{
 	cout << "Dog destructor...\n";
}


int main()
{
	Dog fido;
	fido.Speak();
	fido.WagTail();
	cout << "Fido is " << fido.GetAge() << " years old\n";
	return 0;
}
////
Mammal constructor...
Dog constructor...
Mammal sound!
Tail wagging...
Fido is 1 years old
Dog destructor...
Mammal destructor...

