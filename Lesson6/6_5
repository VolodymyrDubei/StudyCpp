// Приклад помилки компіляції, що пов'язана
// з порушенням угод інтерфейсу класу

#include <iostream> // для об'єкта cout
using namespace std;
class Cat // Початок оголошення класу
{
public:					  // Початок розділу public
	Cat(int initialAge);  // конструктор
	~Cat();				  // деструктор
	int GetAge() const;	  // метод доступу
	void SetAge(int age); // метод доступу
	void Meow();		  // Звичайний метод
private:				  // початок розділу private
	int itsAge;			  // змінна-член
};

// конструктор класу Cat
Cat::Cat(int initialAge)
{
	itsAge = initialAge;
	cout << "Cat constructor\n";
}

Cat::~Cat() // деструктор що не робить жодних дій
{
	cout << "Cat destructor\n";
}

// GetAge, відкрита функція доступу,
// повертає значення змінної-члена itsAge
int Cat::GetAge() const
{
	return (itsAge++); // це порушення угоди інтерфейсу!
}
// Визначення відкритої функції доступу SetAge
// Функція SetAge
// ініціює змінну-член itsAge
void Cat::SetAge(int age)
{
	// встановлюємо змінну-член itsAge рівною
	// значенню, переданому за допомогою параметра пекло
	itsAge = age;
}

// Визначення методу Meow
// Повертає void
// параметрів немає
// використовується для виведення на екран тексту "Meow"
void Cat::Meow()
{
	cout << "Meow.\n";
}

// Створюємо віртуальну кішку, встановлюємо її вік, дозволяємо
// їй м'явкнути, повідомляємо її вік, потім знову "нявкає",

int main()
{
	Cat Frisky; // не відповідає оголошеню
	Frisky.Meow();
	Frisk.Bark();	  // Ні, коти поки не гавкають
	Frisk.itsAge = 7; // Змінна itsAge закрити
	return 0;
}

