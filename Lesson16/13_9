#include <iostream>

using namespace std;

class Shape
{
public:
    Shape() {}
    virtual ~Shape() {}
    virtual long GetArea() = 0;
    virtual long GetPerim() = 0;
    virtual void Draw() = 0;
};

void Shape::Draw()
{
    cout << "Abstract drawing mechanism!\n";
}

class Circle : public Shape
{
public:
    Circle(int radius) : itsRadius(radius) {}
    ~Circle() {}
    long GetArea() { return 3 * itsRadius * itsRadius; }
    long GetPerim() { return 6 * itsRadius; }
    void Draw();

private:
    int itsRadius;
    int itsCircumference;
};

void Circle::Draw()
{
    cout << "Circle drawing routine here!\n";
    Shape::Draw();
}

class Rectangle : public Shape
{
public:
    Rectangle(int len, int width) : itsLength(len), itsWidth(width) {}
    virtual ~Rectangle() {}
    virtual long GetArea() { return itsLength * itsWidth; }
    virtual long GetPerim() { return 2 * itsLength + 2 * itsWidth; }
    virtual int GetLength() { return itsLength; }
    virtual int GetWidth() { return itsWidth; }
    virtual void Draw();

private:
    int itsLength;
    int itsWidth;
};

void Rectangle::Draw()
{
    for (int i = 0; i < itsLength; i++)
    {
   	 for (int j = 0; j < itsLength; j++)
   		 cout << "x ";
   	 cout << "\n";
    }
    Shape::Draw();
};

class Square : public Rectangle
{
public:
    Square(int len);
    Square(int len, int width);
    ~Square() {}
    long GetPerim() { return 4 + GetLength(); }
};

Square::Square(int len) : Rectangle(len, len) {}
Square::Square(int len, int width) : Rectangle(len, width)
{
    if (GetLength() != GetWidth())
   	 cout << "Error, not a square... a Rectangle??\n";
}

int main()
{
    int choice;
    bool fQuit = false;
    Shape *sp = nullptr;
    while (!fQuit)
    {
   	 cout << "(1)Circle (2)Rectangle (3)Square (0)Quit: ";
   	 cin >> choice;
   	 switch (choice)
   	 {
   	 case 0:
   		 fQuit = true;
   		 break;
   	 case 1:
   		 sp = new Circle(5);
   		 break;
   	 case 2:
   		 sp = new Rectangle(4, 6);
   		 break;
   	 case 3:
   		 sp = new Square(5);
   		 break;
   	 default:
   		 cout << "Please enter a number between O and 3" << endl;
   		 continue;
   		 break;
   	 }

   	 if (!fQuit)
   		 sp->Draw();

   	 delete sp;
   	 sp = nullptr;
   	 cout << "\n";
    }
    return 0;
}

Результат
(1)Circle (2)Rectangle (3)Square (0)Quit: 2
x x x x
x x x x
x x x x
x x x x
Abstract drawing mechanism!

(1)Circle (2)Rectangle (3)Square (0)Quit: 3
x x x x x
x x x x x
x x x x x
x x x x x
x x x x x
Abstract drawing mechanism!

(1)Circle (2)Rectangle (3)Square (0)Quit: 0

