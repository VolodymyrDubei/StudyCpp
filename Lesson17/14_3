#include <iostream>

using namespace std;

class Cat
{
public:
    Cat(int age) : itsAge(age) { HowManyCats++; }
    virtual ~Cat() { HowManyCats--; }
    virtual int GetAge() { return itsAge; }
    virtual void SetAge(int age) { itsAge = age; }
    virtual int GetHowMany() { return HowManyCats; }

private:
    int itsAge;
    static int HowManyCats;
};

int Cat::HowManyCats = 0;

int main()
{

    const int MaxCats = 5;
    int i;
    Cat *CatHouse[MaxCats];
    for (i = 0; i < MaxCats; i++)
   	 CatHouse[i] = new Cat(i);

    for (i = 0; i < MaxCats; i++)
    {
   	 cout << "There are ";
   	 cout << CatHouse[i]->GetHowMany();
   	 cout << " cats left!\n";
   	 cout << "Deleting the one which is ";
   	 cout << CatHouse[i]->GetAge() + 2;
   	 cout << " years old\n";
   	 delete CatHouse[i];
   	 CatHouse[i] = 0;
    }

    return 0;
}

Результат
There are 5 cats left!
Deleting the one which is 2 years old
There are 4 cats left!
Deleting the one which is 3 years old
There are 3 cats left!
Deleting the one which is 4 years old
There are 2 cats left!
Deleting the one which is 5 years old
There are 1 cats left!
Deleting the one which is 6 years old

